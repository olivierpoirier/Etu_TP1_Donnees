Fait par Olivier Poirier
2024-10-08

PRÉPARATION DE L'APPLICATION
0) Faites un git clone du projet : git clone https://github.com/olivierpoirier/Etu_TP1_Donnees.git
1) Mettre le .env fourni sur léa à la racine du projet
2) faire les installations plus bas 
3) Prendre les tests de postman pour les requêtes
4) Créér un environnement postman nommé "Token" qui prend une variable nommée "token"
5) lancer le projet avec npx ts-node-dev --ignore-watch data src/index.ts    
6) Pour voir swagger, allez sur https://localhost:3000/v1/api/
7) Pour les autres routes et commandes de l'api, suivez le swagger et postman


INSTALLATION:

* VEUILLEZ FAIRE TOUTES LES COMMANDES SUIVANTES * :
npm install express fs https
npm install typescript ts-node-dev @types/node @types/express --save-dev
npm install node-fetch
npm install node-rsa
npm i --save-dev @types/node-rsa
npm install express jsonwebtoken bcryptjs
npm i --save-dev @types/jsonwebtoken @types/bcryptjs
npm install jsonwebtoken
npm install swagger-ui-express swagger-jsdoc
npm install --save-dev @types/swagger-jsdoc
npm install winston
npm install crypto
npm install bcryptjs
npm install rxjs
npm install dotenv
npm install express-session


#Nouveau : 
npm install ts-node --save-dev
npm install ts-node-dev --save-dev

npm install --save-dev jest
npm i --save-dev @types/jest
npm install --save-dev jest ts-jest @types/jest
npm install jest-junit --save-dev
npm install supertest --save-dev
npm i --save-dev @types/supertest
npm i --save-dev @types/jsonwebtoken

npm install -g artillery
npm install --save-dev artillery


Pour faire les tests :
Jest : npm test
Artillery : npm run test:artillery

La documentation des endpoints est comme toujours dans /api/ de l'application
grâce au swagger
 

Mesures mises en place pour répondres aux exigences du TP2:
J'ai dû :
    - Installer les nouvelles dépendances pour les librairies
    - Changer le package.json pour modifier les commandes npm
    - Réécrire presque tout mon code pour qu'il soit plus efficace, plus lisible et plus sécuritaire
    - Ajouter une façon de changer l'environnement avec les commandes npm
    - Créer un répertoire de test
    - Écrire tout les différents types de tests pour le sql, fonctionnalité et tout.
    - Créer des fichiers de config (artillery, pour gitHub action et d'autres)
    - Connecter mon application à mon cluster mongoDB
    - Comprendre comment toutes les librairies fonctionnent
    - Modifier le swagger de la v1 pour le rendre compatible à la V2